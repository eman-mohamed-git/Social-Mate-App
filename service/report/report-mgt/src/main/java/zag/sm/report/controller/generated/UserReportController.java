/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package zag.sm.report.controller.generated;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import zag.sm.report.model.generated.ErrorVTO;
import zag.sm.report.model.generated.ReportRequestDTO;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.6.0")
@Validated
@Controller
@Tag(name = "User Report", description = "the User Report API")
public interface UserReportController {

    /**
     * POST /posts/{postId}/reports : Create a report on a post Create a new report for a specific post
     *
     * @param postId
     *            The ID of the post being reported (required)
     * @param reportRequestDTO
     *            (optional)
     *
     * @return Created (status code 201) or Bad Request (status code 400) or Internal Server Error (status code 500)
     */
    @Operation(operationId = "createReport", summary = "Create a report on a post", description = "Create a new report for a specific post", tags = {
            "User Report" }, responses = { @ApiResponse(responseCode = "201", description = "Created"),
                    @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorVTO.class)) }),
                    @ApiResponse(responseCode = "500", description = "Internal Server Error", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorVTO.class)) }) })
    @RequestMapping(method = RequestMethod.POST, value = "/posts/{postId}/reports", produces = {
            "application/json" }, consumes = { "application/json" })

    ResponseEntity<Void> _createReport(
            @Parameter(name = "postId", description = "The ID of the post being reported", required = true, in = ParameterIn.PATH) @PathVariable("postId") Long postId,
            @Parameter(name = "ReportRequestDTO", description = "") @Valid @RequestBody(required = false) ReportRequestDTO reportRequestDTO);

}
